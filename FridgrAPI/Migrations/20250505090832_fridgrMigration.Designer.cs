// <auto-generated />
using FridgrAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FridgrAPI.Migrations
{
    [DbContext(typeof(FridgrDBContext))]
    [Migration("20250505090832_fridgrMigration")]
    partial class fridgrMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FridgrAPI.Models.FoodItem", b =>
                {
                    b.Property<int>("FoodItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("foodItemId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodItemId"));

                    b.Property<string>("AddedDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("addedDate");

                    b.Property<string>("ExpiryDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("expiryDate");

                    b.Property<string>("FoodItemImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("foodItemImageUrl");

                    b.Property<string>("FoodItemName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("foodItemName");

                    b.Property<string>("FoodItemNote")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("foodItemNote");

                    b.Property<string>("FoodItemQuantity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("foodItemQuantity");

                    b.Property<string>("FoodItemUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("foodItemUnit");

                    b.Property<int?>("SpaceId")
                        .HasColumnType("int")
                        .HasColumnName("spaceId");

                    b.HasKey("FoodItemId");

                    b.ToTable("FoodItem", (string)null);
                });

            modelBuilder.Entity("FridgrAPI.Models.Grocery", b =>
                {
                    b.Property<int>("GroceryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("groceryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroceryId"));

                    b.Property<string>("GroceryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("groceryName");

                    b.Property<string>("GroceryQuantity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("groceryQuantity");

                    b.Property<string>("GroceryUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("groceryUnit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("userId");

                    b.HasKey("GroceryId");

                    b.ToTable("Grocery", (string)null);
                });

            modelBuilder.Entity("FridgrAPI.Models.Space", b =>
                {
                    b.Property<int>("SpaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("spaceId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpaceId"));

                    b.Property<string>("SpaceImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("spaceImageUrl");

                    b.Property<string>("SpaceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("spaceName");

                    b.Property<string>("SpaceNote")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("spaceNote");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("userId");

                    b.HasKey("SpaceId");

                    b.ToTable("Space", (string)null);
                });

            modelBuilder.Entity("FridgrAPI.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("userId");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
